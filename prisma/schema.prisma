// prisma/schema.prisma
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// Clientes registrados
model Cliente {
  id_cliente     Int           @id @default(autoincrement())
  nombre         String
  apellido       String?
  email          String        @unique
  contrasena     String
  telefono       String?
  direccion      String?
  fecha_registro DateTime      @default(now())
  activo         Boolean       @default(true)
  carritos       Carrito[]
  pedidos        Pedido[]
}

// Roles de usuarios internos
model Rol {
  id_rol      Int               @id @default(autoincrement())
  nombre      String            @unique
  descripcion String?
  usuarios    UsuarioInterno[]
}

// Usuarios internos (empleados)
model UsuarioInterno {
  id_usuario Int     @id @default(autoincrement())
  nombre     String
  apellido   String?
  email      String  @unique
  contrasena String
  telefono   String?
  activo     Boolean @default(true)
  id_rol     Int
  rol        Rol     @relation(fields: [id_rol], references: [id_rol])
}

// Tipos de producto (categorías)
model TipoProducto {
  id_tipo     Int        @id @default(autoincrement())
  nombre      String     @unique
  descripcion String?
  productos   Producto[]
}

// Productos turísticos
model Producto {
  id_producto Int           @id @default(autoincrement())
  nombre      String
  descripcion String?
  id_tipo     Int
  tipo        TipoProducto  @relation(fields: [id_tipo], references: [id_tipo])
  precio      Decimal
  stock       Int           @default(0)
  activo      Boolean       @default(true)
  hospedaje   Hospedaje?
  pasaje      Pasaje?
  alquiler    Alquiler?
  paqueteDetallesAsPaquete  PaqueteDetalle[] @relation("PaqueteDetallesPaquete")
  paqueteDetallesAsProducto PaqueteDetalle[] @relation("PaqueteDetallesProducto")
  carritoItems              CarritoItem[]
  pedidoItems               PedidoItem[]
}

// Hospedajes asociados a productos
model Hospedaje {
  id_hospedaje Int      @id @default(autoincrement())
  id_producto  Int      @unique
  producto     Producto @relation(fields: [id_producto], references: [id_producto])
  ubicacion    String?
  fecha_inicio DateTime?
  fecha_fin    DateTime?
  capacidad    Int?
}

// Pasajes asociados a productos
model Pasaje {
  id_pasaje         Int      @id @default(autoincrement())
  id_producto       Int      @unique
  producto          Producto @relation(fields: [id_producto], references: [id_producto])
  origen            String?
  destino           String?
  fecha_salida      DateTime?
  fecha_regreso     DateTime?
  clase             String?
  asientos_disponibles Int   @default(0)
}

// Alquileres asociados a productos
model Alquiler {
  id_alquiler   Int      @id @default(autoincrement())
  id_producto   Int      @unique
  producto      Producto @relation(fields: [id_producto], references: [id_producto])
  tipo_vehiculo String?
  ubicacion     String?
  fecha_inicio  DateTime?
  fecha_fin     DateTime?
  cantidad      Int      @default(0)
}

// Relación de productos en un paquete
model PaqueteDetalle {
  id_detalle   Int      @id @default(autoincrement())
  id_paquete   Int
  paquete      Producto @relation("PaqueteDetallesPaquete", fields: [id_paquete], references: [id_producto])
  id_producto  Int
  producto     Producto @relation("PaqueteDetallesProducto", fields: [id_producto], references: [id_producto])
  cantidad     Int      @default(1)
}

// Carritos de compras
model Carrito {
  id_carrito    Int         @id @default(autoincrement())
  id_cliente    Int
  cliente       Cliente     @relation(fields: [id_cliente], references: [id_cliente])
  fecha_creacion DateTime   @default(now())
  items         CarritoItem[]
}

// Ítems del carrito
model CarritoItem {
  id_item     Int      @id @default(autoincrement())
  id_carrito  Int
  carrito     Carrito  @relation(fields: [id_carrito], references: [id_carrito])
  id_producto Int
  producto    Producto @relation(fields: [id_producto], references: [id_producto])
  cantidad    Int      @default(1)
}

// Pedidos realizados por clientes
model Pedido {
  id_pedido     Int          @id @default(autoincrement())
  id_cliente    Int
  cliente       Cliente      @relation(fields: [id_cliente], references: [id_cliente])
  fecha_pedido  DateTime     @default(now())
  estado        String
  total         Decimal
  items         PedidoItem[]
  pagos         Pago[]
}

// Ítems de cada pedido
model PedidoItem {
  id_detalle   Int      @id @default(autoincrement())
  id_pedido    Int
  pedido       Pedido   @relation(fields: [id_pedido], references: [id_pedido])
  id_producto  Int
  producto     Producto @relation(fields: [id_producto], references: [id_producto])
  cantidad     Int
  precio       Decimal
}

// Pagos vinculados a pedidos
model Pago {
  id_pago     Int      @id @default(autoincrement())
  id_pedido   Int
  pedido      Pedido   @relation(fields: [id_pedido], references: [id_pedido])
  fecha_pago  DateTime @default(now())
  monto       Decimal
  metodo      String?
  estado      String
}

// Contactos internos para notificaciones
model ContactoInterno {
  id_contacto Int    @id @default(autoincrement())
  nombre      String
  email       String
  telefono    String?
  cargo       String?
}
